<Window x:Class="OutlookFilters.Windows.UI" 
				xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
				xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
				xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
				xmlns:d="http://schemas.microsoft.com/expression/blend/2008"  
				xmlns:global="clr-namespace:QuickSend.GlobalObjects"
				xmlns:col="clr-namespace:QuickSend.UserInterface.Collections" 
				xmlns:calc="clr-namespace:QuickSend_AppLayer.Calc"
				xmlns:ui ="clr-namespace:QuickSend.UserInterface"
				mc:Ignorable="d" Title="Quick Send" 
				WindowStartupLocation="Manual" Left="0" Top="0" 
				WindowStyle="ToolWindow" ResizeMode="CanResizeWithGrip" 
				UseLayoutRounding="True" 
				Height="450" Width="800">
	<Window.Resources>
		<col:EmailTemplates x:Key="EmailTemplates" />
		<global:Diagrams x:Key="Diagrams" />
		<global:AgroSheets x:Key="AgroSheets"/>
		<global:Inserts x:Key="Inserts"/>
		<!--Control colors.-->
		<Color x:Key="WindowColor">#FFE8EDF9</Color>
		<Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
		<Color x:Key="ContentAreaColorDark">#FF7381F9</Color>
		<Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
		<Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
		<Color x:Key="DisabledForegroundColor">#FF888888</Color>
		<Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
		<Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>
		<Color x:Key="ControlLightColor">#C9E7D8D5</Color>
		<Color x:Key="ControlMediumColor">#C9CBB9A0</Color>
		<Color x:Key="ControlDarkColor">#FF211AA9</Color>
		<Color x:Key="ControlMouseOverColor">#D6BE9B5D</Color>
		<Color x:Key="ControlPressedColor">#E1A5825D</Color>
		<Color x:Key="GlyphColor">#FF444444</Color>
		<Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>
		<!--Border colors-->
		<Color x:Key="BorderLightColor">#FFCCCCCC</Color>
		<Color x:Key="BorderMediumColor">#FF888888</Color>
		<Color x:Key="BorderDarkColor">#FF444444</Color>
		<Color x:Key="PressedBorderLightColor">#FF888888</Color>
		<Color x:Key="PressedBorderDarkColor">#FF444444</Color>
		<Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
		<Color x:Key="DisabledBorderDarkColor">#FF888888</Color>
		<Color x:Key="DefaultBorderBrushDarkColor">Black</Color>
		<!--Control-specific resources.-->
		<Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
		<Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
		<Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>
		<Color x:Key="NavButtonFrameColor">#FF3843C4</Color>
		<LinearGradientBrush x:Key="MenuPopupBrush" EndPoint="0.5,1" StartPoint="0.5,0">
			<GradientStop Color="{DynamicResource ControlLightColor}" Offset="0" />
			<GradientStop Color="{DynamicResource ControlMediumColor}" Offset="0.5" />
			<GradientStop Color="{DynamicResource ControlLightColor}" Offset="1" />
		</LinearGradientBrush>
		<LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill" StartPoint="0,0" EndPoint="1,0">
			<LinearGradientBrush.GradientStops>
				<GradientStopCollection>
					<GradientStop Color="#000000FF" Offset="0" />
					<GradientStop Color="#600000FF" Offset="0.4" />
					<GradientStop Color="#600000FF" Offset="0.6" />
					<GradientStop Color="#000000FF" Offset="1" />
				</GradientStopCollection>
			</LinearGradientBrush.GradientStops>
		</LinearGradientBrush>
		<!--#region Styles -->
		<Style TargetType="Grid">
			<Setter Property="Margin" Value="3" />
		</Style>
		<Style x:Key="NormalButton" TargetType="Button">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Border x:Name="NormalBorder" BorderBrush="White">
							<ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" Content="{TemplateBinding Content}" />
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style TargetType="Button">
			<Setter Property="HorizontalAlignment" Value="Left" />
			<Setter Property="Width" Value="100" />
			<Setter Property="Margin" Value="2" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Border TextBlock.Foreground="{TemplateBinding Foreground}" x:Name="Border" CornerRadius="2" BorderThickness="1">
							<Border.BorderBrush>
								<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
									<LinearGradientBrush.GradientStops>
										<GradientStopCollection>
											<GradientStop Color="{DynamicResource BorderLightColor}" Offset="0.0" />
											<GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0" />
										</GradientStopCollection>
									</LinearGradientBrush.GradientStops>
								</LinearGradientBrush>
							</Border.BorderBrush>
							<Border.Background>
								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
									<GradientStop Color="{DynamicResource ControlLightColor}" Offset="0" />
									<GradientStop Color="{DynamicResource ControlMediumColor}" Offset="1" />
								</LinearGradientBrush>
							</Border.Background>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0:0:0.5" />
										<VisualTransition GeneratedDuration="0" To="Pressed" />
									</VisualStateGroup.Transitions>
									<VisualState x:Name="Normal" />
									<VisualState x:Name="MouseOver">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="Border">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlMouseOverColor}" />
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Pressed">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="Border">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlPressedColor}" />
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).
                      (GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="Border">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource PressedBorderDarkColor}" />
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="Border">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource PressedBorderLightColor}" />
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="Border">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledControlDarkColor}" />
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="Border">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledForegroundColor}" />
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).
                      (GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="Border">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledBorderDarkColor}" />
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<ContentPresenter Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True" />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsDefault" Value="true">
								<Setter TargetName="Border" Property="BorderBrush">
									<Setter.Value>
										<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
											<GradientBrush.GradientStops>
												<GradientStopCollection>
													<GradientStop Color="{DynamicResource DefaultBorderBrushLightBrush}" Offset="0.0" />
													<GradientStop Color="{DynamicResource DefaultBorderBrushDarkColor}" Offset="1.0" />
												</GradientStopCollection>
											</GradientBrush.GradientStops>
										</LinearGradientBrush>
									</Setter.Value>
								</Setter>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style TargetType="TextBox">
			<Setter Property="HorizontalAlignment" Value="Stretch" />
		</Style>
		<Style TargetType="Border">
			<Setter Property="BorderThickness" Value="1" />
			<Setter Property="BorderBrush" Value="DarkGray" />
		</Style>
		<Style TargetType="StackPanel">
			<Setter Property="Margin" Value="2" />
		</Style>
		<Style TargetType="ListView"></Style>
		<Style x:Key="RightPanelHeight" TargetType="StackPanel">
			<Setter Property="Height" Value="215"/>
		</Style>
		<!--#endregion-->
	</Window.Resources>
	<Grid Name="MainGrid">
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="Auto" />
			<ColumnDefinition />
		</Grid.ColumnDefinitions>
		<GroupBox Name="GroupBox_LeftPanel" Header="Select Template">
			<StackPanel Name="StackPanel_LeftPanel" Grid.Column="0" Width="150">
				<ListView Name="ListView_SelectTemplate" DataContext="{StaticResource EmailTemplates}" ItemsSource="{Binding}">
					<ListView.ItemTemplate>
						<DataTemplate>
							<TextBlock Text="{Binding Path=Title}" />
						</DataTemplate>
					</ListView.ItemTemplate>
				</ListView>
			</StackPanel>
		</GroupBox>
		<StackPanel Name="StackPanel_RightPanel" Grid.Column="1">
			<Grid Name="RightTop" Grid.Row="0" DataContext="{Binding ElementName=ListView_SelectTemplate, Path=SelectedValue}">
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
					<RowDefinition />
				</Grid.RowDefinitions>
				<DockPanel Grid.Row="0">
					<TabControl DockPanel.Dock="Right" MinWidth="75" MaxWidth="225">
						<TabItem Header="Diagram" Height="22" VerticalAlignment="Bottom">
							<StackPanel DataContext="{StaticResource Diagrams}" Style="{StaticResource RightPanelHeight}">
								<Expander Name="Expander_DiagramFolder" Header="{Binding Path=FolderPath, Mode=TwoWay}">
									<Expander.ToolTip>
										<TextBlock Text="{Binding Path=FolderPath}" />
									</Expander.ToolTip>
									<TextBox Text="{Binding Path=FolderPath, Mode=TwoWay}" />
								</Expander>
								<TextBox Name="TextBox_DiagramSearch" 
											 Text="{Binding Path=SearchString, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"   
											 HorizontalAlignment="Stretch" />
								<ListView Name="ListView_Diagrams" ItemsSource="{Binding}" SelectionMode="Single"
												Height="200">
									<ListView.ItemTemplate>
										<DataTemplate>
											<StackPanel Orientation="Horizontal">
												<TextBlock Text="{Binding FileInfo.Name}">
													<TextBlock.ContextMenu>
														<ContextMenu>
															<MenuItem Header="Attach"  Command="{Binding AttachCommand}"></MenuItem>
														</ContextMenu>
													</TextBlock.ContextMenu>
												</TextBlock>
											</StackPanel>

										</DataTemplate>
									</ListView.ItemTemplate>
								</ListView>
							</StackPanel>
						</TabItem>
						<TabItem Header="Inserts">
							<StackPanel DataContext="{StaticResource Inserts}"  Style="{StaticResource RightPanelHeight}">
								<Expander Name="Expander_InsertFolder" Header="{Binding Path=FolderPath, Mode=TwoWay}">
									<Expander.ToolTip>
										<TextBlock Text="{Binding Path=FolderPath}" />
									</Expander.ToolTip>
									<TextBox Text="{Binding Path=FolderPath, Mode=TwoWay}" />
								</Expander>
								<TextBox Name="TextBox_InsertSearch" 
											 Text="{Binding Path=SearchString, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"   
											 HorizontalAlignment="Stretch" />
								<ListView Name="ListView_Inserts" ItemsSource="{Binding}" SelectionMode="Single"
												Height="200">
									<ListView.ItemTemplate>
										<DataTemplate>
											<StackPanel Orientation="Horizontal">
												<TextBlock Text="{Binding FileInfo.Name}">
													<TextBlock.ContextMenu>
														<ContextMenu>
															<MenuItem Header="Attach"  Command="{Binding AttachCommand}"></MenuItem>
														</ContextMenu>
													</TextBlock.ContextMenu>
												</TextBlock>
											</StackPanel>

										</DataTemplate>
									</ListView.ItemTemplate>
								</ListView>
							</StackPanel>
						</TabItem>
						<TabItem Header="Agronomy" >
							<StackPanel DataContext="{StaticResource AgroSheets}" Style="{StaticResource RightPanelHeight}">
								<Expander Name="Expander_AgroSheetFolder" Header="{Binding Path=FolderPath, Mode=TwoWay}">
									<Expander.ToolTip>
										<TextBlock Text="{Binding Path=FolderPath}" />
									</Expander.ToolTip>
									<TextBox Text="{Binding Path=FolderPath, Mode=TwoWay}" />
								</Expander>
								<TextBox Name="TextBox_AgroSheetSearch" 
											 Text="{Binding Path=SearchString, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"   
											 HorizontalAlignment="Stretch" />
								<ListView Name="ListView_AgroSheets" ItemsSource="{Binding}" SelectionMode="Single"
												Height="200">
									<ListView.ItemTemplate>
										<DataTemplate>
											<StackPanel Orientation="Horizontal">
												<TextBlock Text="{Binding FileInfo.Name}">
													<TextBlock.ContextMenu>
														<ContextMenu>
															<MenuItem Header="Attach"  Command="{Binding AttachCommand}"></MenuItem>
														</ContextMenu>
													</TextBlock.ContextMenu>
												</TextBlock>
											</StackPanel>

										</DataTemplate>
									</ListView.ItemTemplate>
								</ListView>
							</StackPanel>
						</TabItem>
					</TabControl>
					<GroupBox Header="Template Parameters" Grid.Row="0" HorizontalAlignment="Stretch">
						<DockPanel MinHeight="75">
							<ItemsControl ItemsSource="{Binding Path=Inputs}" DockPanel.Dock="Top">
								<ItemsControl.Resources>
									<ui:InputTemplateSelector x:Key="InputTemplateSelector" />
									
									<DataTemplate x:Key="StringDataTemplate" DataType="{x:Type calc:Input}">
										<StackPanel Orientation="Horizontal">
											<Label Content="{Binding Path=Label}" />
											<TextBox Text="{Binding Path=Value}" Margin="5,0,0,0"/>
										</StackPanel>							
									</DataTemplate>
									
									<DataTemplate x:Key="BoolDataTemplate" DataType="{x:Type calc:Input}">
										<CheckBox IsChecked="{Binding Path=Value}" Content="{Binding Path=Label}"/>
									</DataTemplate>

									<DataTemplate x:Key="OCServiceToRemoveDataTemplate" DataType="{x:Type calc:Input}">
										<Grid>
											<Grid.RowDefinitions>
												<RowDefinition Height="Auto"/>
												<RowDefinition/>
											</Grid.RowDefinitions>
											<GroupBox Grid.Row="0" Header="Remove a service">
												<StackPanel Orientation="Horizontal">
													<Label Content="Service"/>
													<TextBox Text="{Binding Path=Value}"/>
												</StackPanel>
											</GroupBox>
										</Grid>
									</DataTemplate>
									
								</ItemsControl.Resources>
								<ItemsControl.ItemsPanel>
									<ItemsPanelTemplate>
										<WrapPanel Orientation="Vertical" />
									</ItemsPanelTemplate>
								</ItemsControl.ItemsPanel>
								<ItemsControl.ItemTemplate>
									<DataTemplate>
										<UniformGrid>
											<Border Visibility="{Binding Path=Visibility}">
												<StackPanel>
													<ContentControl Content="{Binding}" ContentTemplateSelector="{DynamicResource InputTemplateSelector }" />
												</StackPanel>
											</Border>
										</UniformGrid>
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</ItemsControl>
							<DockPanel DockPanel.Dock="Bottom" HorizontalAlignment="Stretch">
								<Button Name="Button_GetTemplate" DockPanel.Dock="Left" VerticalAlignment="Bottom" HorizontalAlignment="Left" Content="Get Template" Command="{Binding Path=TemplateBuild}" />
								<Button Name="Button_DiscardEmail" DockPanel.Dock="Right" VerticalAlignment="Bottom" HorizontalAlignment="Right" Content="Discard Message" Command="{Binding Path=DiscardMessage}" />
							</DockPanel>
						</DockPanel>
					</GroupBox>

				</DockPanel>

				<Grid Grid.Row="2">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition />
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition />
						<RowDefinition />
						<RowDefinition />
					</Grid.RowDefinitions>
					<Separator Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Margin="5" />
					<Button Content="Subject:" Name="Button_Subject" Command="{Binding Path=AssignSubject}" CommandParameter="{Binding Path=Subject}" Grid.Column="0" Grid.Row="1" />
					<TextBox Text="{Binding Path=Subject}" Grid.Column="1" Grid.Row="1" />
					<Button Content="Body:" Command="{Binding Path=AssignBody}" CommandParameter="{Binding Path=Body}" VerticalAlignment="Top" Grid.Column="0" Grid.Row="2" />
					<TextBox Text="{Binding Path=Body, Mode=TwoWay}" TextWrapping="WrapWithOverflow" MinHeight="150" Grid.Column="1" Grid.Row="2" />
				</Grid>
			</Grid>
		</StackPanel>
	</Grid>
</Window>